#Chinook Database Queries
##Data
The following queries were created to answer questions based on the Chinook Database. The database is available through think link: [https://github.com/lerocha/chinook-database]
The Chinook Database allows for personal use without limitation. 

--Which tracks has been purchased 3 or more times? 
SELECT tracks.Name, SUM(invoice_items.Quantity) AS Total_Purchased
FROM invoice_items
LEFT JOIN tracks
ON tracks.TrackId = invoice_items.TrackId
GROUP BY tracks.Name
HAVING Total_Purchased >=3
ORDER BY Total_Purchased DESC
;

--Which genres are most popular to customers?
SELECT genres.Name AS Genre, SUM(invoice_items.Quantity) AS Qty_Purchased
FROM invoice_items
LEFT JOIN tracks
ON tracks.TrackId = invoice_items.TrackId
LEFT JOIN genres
ON genres.GenreId = tracks.GenreId
Group BY Genre
ORDER BY Qty_Purchased DESC
;

--Calculate total sales for each year
SELECT STRFTIME('%Y', InvoiceDate) AS Year, ROUND(SUM(Total),2) AS Total_Sales
FROM invoices
GROUP BY Year
;

--Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, CustomerID, Country
FROM customers
WHERE Country <> 'USA'
;

--Show only the Customers from Brazil.
SELECT FirstName, LastName, CustomerID, Country
FROM customers
WHERE Country == 'Brazil'
;

--Find the Invoices of customers who are from Brazil. 
--The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT FirstName, LastName, Country, InvoiceId, InvoiceDate
FROM customers
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE Country == 'Brazil'
;

--Show the Employees who are Sales Agents.
SELECT FirstName, LastName, Title
FROM employees
WHERE Title = 'Sales Support Agent'
;

--Find a unique list of countries from the Invoice table.
SELECT distinct BillingCountry
FROM invoices
;

--Provide a query that shows the invoices associated with each sales agent. 
--The resulting table should include the Sales Agent's full name.
SELECT employees.LastName, employees.FirstName, employees.Title, invoices.InvoiceId
FROM invoices
LEFT JOIN customers
ON invoices.CustomerId = customers.CustomerId
LEFT JOIN employees
ON employees.EmployeeId = customers.SupportRepId
;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.Total, customers.FirstName, customers.LastName, invoices.BillingCountry, customers.Country, employees.FirstName, employees.LastName
FROM invoices
OUTER JOIN customers
ON invoices.CustomerId = customers.CustomerId
OUTER JOIN employees
ON employees.EmployeeId = customers.SupportRepId
;

--How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate LIKE '%2009%'
;

--What are the total sales for 2009?
SELECT ROUND(SUM(Total),2)
FROM invoices
WHERE InvoiceDate LIKE '%2009%'
;

--Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.name, invoices.InvoiceId
FROM invoices
LEFT JOIN invoice_items
ON invoices.InvoiceId = invoice_items.InvoiceId
LEFT JOIN tracks
ON invoice_items.TrackId = tracks.TrackId
;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.name, artists.Name, invoices.InvoiceId
FROM invoices
LEFT JOIN invoice_items
ON invoices.InvoiceId = invoice_items.InvoiceId
LEFT JOIN tracks
ON invoice_items.TrackId = tracks.TrackId
LEFT JOIN albums
ON albums.AlbumId = tracks.AlbumId
LEFT JOIN artists
ON albums.ArtistId = artists.ArtistId
;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS Track_Name, albums.Title AS Album_Title, media_types.Name AS Media_Type, genres.Name AS Genre
FROM tracks
LEFT JOIN media_types
ON media_types.MediaTypeId = tracks.MediaTypeId
LEFT JOIN genres
ON genres.GenreId = tracks.GenreId
LEFT JOIN albums
ON albums.AlbumId = tracks.albumId
;

--Show the total sales made by each sales agent.
SELECT employees.LastName, ROUND(SUM(invoices.Total),2) AS Total_Sales
FROM invoices
JOIN customers
ON invoices.CustomerId = customers.CustomerId
JOIN employees
ON customers.SupportRepId = employees.EmployeeId
GROUP BY employees.LastName
;

--Which sales agent made the most dollars in sales in 2009?
SELECT employees.LastName, ROUND(SUM(invoices.Total),2) AS Total_Sales
FROM invoices
JOIN customers
ON invoices.CustomerId = customers.CustomerId
JOIN employees
ON customers.SupportRepId = employees.EmployeeId
WHERE invoices.InvoiceDate LIKE '%2009%'
GROUP BY employees.LastName
ORDER BY Total_Sales DESC
LIMIT 1
;
